server.port: 8819

# H2
spring.h2.console.enabled: true
spring.h2.console.path: /h2console
# Datasource

# H2 DATABASE CONFIG
spring.datasource.type: com.alibaba.druid.pool.DruidDataSource
spring.datasource.schema: classpath:/db/schema.sql
spring.datasource.data: classpath:/db/data.sql
spring.datasource.url: jdbc:h2:mem:testdb
spring.datasource.username: sa
spring.datasource.password:
spring.datasource.platform: h2
spring.datasource.initialize: true
spring.datasource.continue-on-error: true

# Spring Cloud & Eureka
spring.cloud:
  inetutils:
    preferredNetworks:
      - 192.168
      - 10.0

eureka:
  instance:
    hostname: localhost
    # instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
    appname: ${spring.application.name}
    metadataMap.zone: hz-zone1
    preferIpAddress: true
    virtualHostName: ${spring.application.name}
  client:
    preferSameZoneEureka: true
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${vcap.services.eureka-service.credentials.uri:http://10.0.10.11:8761}/eureka/
    healthcheck:
      enabled: true

# Kafka (KafkaProperties)
## common
# 不要配置下面这个，会异常
# spring.kafka.client-id: crawler_slave

## consumer
spring.kafka.consumer.bootstrap-servers: 10.0.10.11:9092
spring.kafka.consumer.auto-commit-interval: 1000
spring.kafka.consumer.enable-auto-commit: false
spring.kafka.consumer.group-id: news-service
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

## producer
spring.kafka.producer.bootstrap-servers: 10.0.10.11:9092
spring.kafka.producer.acks: all
spring.kafka.producer.batch-size: 16384
spring.kafka.producer.retries: 0
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer

# mybatis
mybatis-plus:
  mapper-locations: classpath:/mapper/*/mysql/*Mapper.xml
  # 实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.yunyong.dataplat.**.po.*
  # typeEnumsPackage: com.yunyong.dataplat.**.po.enums
  global-config:
    # 主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    # 字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    # 驼峰下划线转换
    db-column-underline: true
    # 刷新mapper 调试神器
    refresh-mapper: true
    # 数据库大写下划线转换
    # capital-mode: true
    # 逻辑删除配置（下面3个配置）
    logic-delete-value: 0
    logic-not-delete-value: 1
    # 自定义SQL注入器
    sql-injector: com.baomidou.mybatisplus.mapper.AutoSqlInjector
    #  SQL 解析缓存，开启后多租户 @SqlParser 注解生效
    sql-parser-cache: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

# logging
logging.level.root: debug
